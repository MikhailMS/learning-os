name: Learning OS

on:
  push:
    branches: [ main, development, feature/* ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CLICOLOR_FORCE: 1
  CI: true
  
jobs:
  radius_os_test:
    name:     Nightly Rust CI testing
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-20.04]
    steps:
    
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
      - name: Install bootimage
        run: cargo install bootimage --debug
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Rustup Components
        run: rustup component add rust-src llvm-tools-preview
      - name: Run `cargo bootimage`
        uses: actions-rs/cargo@v1
        with:
          command: bootimage
      - name: Install QEMU (Linux)
        run: sudo apt update && sudo apt install qemu-system-x86
      - name: Print QEMU Version
        run: qemu-system-x86_64 --version
      - name: Run `cargo test`
        uses: actions-rs/cargo@v1
        with:
          command: test
          
  check_formatting:
    name: Check Formatting
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-20.04]
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true
      - name: Run `cargo fmt`
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:   [ubuntu-20.04]
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy, rust-src
          override: true
      - name: Run `cargo clippy`
        uses: actions-rs/cargo@v1
        with:
          command: clippy
